<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org/DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="mapper">
	
	
	<select id="noticelist" resultType="bean" parameterType="bean">
		<![CDATA[
			select * from (select rownum rnum, notice_id, notice_gid, notice_seq, notice_rev, notice_reg_date, m_id, notice_pw, notice_title, notice_content, notice_cnt, notice_upfile from(select * from shop_notice order by notice_gid desc, notice_seq)) where rnum >= #{start} and rnum <= #{end}
		]]>
	</select>

	<select id="total" resultType="java.lang.Integer">
		select
		count(*) from shop_notice
	</select>

	<update id="notice_cnt" parameterType="bean">
		update notice set notice_cnt=notice_cnt+1 where notice_id=#{notice_id}
	</update>

	<select id="noticedetail" resultType="bean" parameterType="bean">
		SELECT * FROM SHOP_NOTICE WHERE NOTICE_ID = #{notice_id}
	</select>

	<sql id="notice_id_Max">
		(select case
		when max(notice_id) is null then 1
		when max(notice_id) is not null then max(notice_id)+1
		end as notice_id from shop_notice
		)
	</sql>

	<insert id="noticewrite" parameterType="bean" >
		insert into shop_notice (notice_id, notice_gid, notice_seq, notice_rev,notice_cnt, notice_reg_date, notice_title, m_id, notice_pw,  notice_content, notice_upfile)
		values(<include refid="notice_id_Max"/>,<include refid="notice_id_Max"/>,0,0,-1,sysdate,#{notice_title}, #{m_id}, #{notice_pw},  #{notice_content}, #{notice_upfile})
		<selectKey keyProperty="notice_id" resultType="java.lang.Integer" order="AFTER">
		  select max(notice_id) as notice_id from shop_notice
		</selectKey>
	</insert>











	<select id="hw_ajax2" resultType="bean" parameterType="bean">
		<![CDATA[
		select keyword from(
			select keyword from search_text
			where case when keyword < 'ㄱ' then substr(keyword, 1, 1) 
			            when ascii('ㄱ') <= ascii(keyword) and 
			                 ascii(keyword)<= ascii('ㅎ') then keyword 
			            when keyword < '나' then 'ㄱ'
			            when keyword < '다' then 'ㄴ'
			            when keyword < '라' then 'ㄷ'
			            when keyword < '마' then 'ㄹ'
			            when keyword < '바' then 'ㅁ'
			            when keyword < '사' then 'ㅂ'
			            when keyword < '아' then 'ㅅ'
			            when keyword < '자' then 'ㅇ'
			            when keyword < '차' then 'ㅈ'
			            when keyword < '카' then 'ㅊ'
			            when keyword < '타' then 'ㅋ'
			            when keyword < '파' then 'ㅌ'
			            when keyword < '하' then 'ㅍ'
			            else                     'ㅎ'
			       end = #{keyword}  or keyword like #{keyword}||'%'
			) aa
			where rownum < 11
			order by lengthb(keyword) asc
		]]>
	</select>


</mapper>