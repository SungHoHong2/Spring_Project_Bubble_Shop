package com.bubble.shop;

import javax.servlet.http.HttpServletRequest;

import org.springframework.stereotype.Controller;

import com.bubble.shop.model.Bean;
import com.bubble.shop.model.Form_Data;
import com.bubble.shop.service.FileUp;
import com.bubble.shop.service.ServiceRepository;


@Controller()
public class MemberController {

	public Object data(String service, ServiceRepository repository, Bean bean, HttpServletRequest request, Form_Data fd)
	{
		Object res	= bean;
		
		switch(service)
		{
			case "test_list" :
				//System.out.println(fd.getList().size());
				//System.out.println("ddd");

				// 첨부파일
				if (fd.getList() != null)
				{
					for (int i = 0; i < fd.getList().size(); i++)
					{
						//System.out.println(fd.getList().get(i).getUpfile().getOriginalFilename());
						if (!fd.getList().get(i).getUpfile().getOriginalFilename().equals("") && fd.getList().get(i).getUpfile().getOriginalFilename() != null)
						{
							bean.setUpfile(fd.getList().get(i).getUpfile());
							fd.getList().get(i).setRename_upfile(new FileUp().fileUpload(bean, request, "up_img"));
							System.out.println(i + "번 - 업로드 파일명 : " + fd.getList().get(i).getUpfile().getOriginalFilename());
							System.out.println(i + "번 - 저장된 파일명 : " + fd.getList().get(i).getRename_upfile());
						}
						else
						{
							System.out.println("첨부 -- 없다");
						}
					}
				}
				else
				{
					System.out.println("데이터 없음");
				}
				//System.out.println(bean.get);
				
				
				//res = repository.test_list(bean, fd);
				break;
			case "signup2" :
				if (bean.getBs_hp() == null || bean.getBs_sex() == null)
				{
					bean.setRedirect(true);
					bean.setUrl("redirect:/bs/user/shop/main");
				}
				else
				{
					bean.setUrl("member/" + service);
				}
				break;
			case "signup2ok" :
				res = repository.bs_join(bean);
				bean.setRedirect(true);
				bean.setUrl("redirect:/bs/user/member/welcome");
				break;
			
			case "signup2_ajax" :
				res = repository.userid_chk(bean);
				bean.setRedirect(true);
				bean.setUrl("bs/user/member/" + service);
				break;
			case "find_id_hp":
				
				res = repository.userid_find_hp(bean);
				bean.setUrl("member/findid");
				break;
			case "find_pw_hp":
				
				
				res = repository.uesrpw_find_hp(bean);
				bean.setUrl("member/findpw");
				break;
				
				
			
		}

		return res;
	}
	
}
