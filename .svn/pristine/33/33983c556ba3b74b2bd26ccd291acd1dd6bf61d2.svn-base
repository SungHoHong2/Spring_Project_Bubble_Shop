package com.bubble.shop;

import javax.servlet.http.HttpServletRequest;

import org.springframework.stereotype.Controller;

import com.bubble.shop.model.Bean;
import com.bubble.shop.model.Form_Data;
import com.bubble.shop.service.ServiceRepository;

@Controller()
public class AdminController {

	public Bean PageMaker(int total)
	{
		Bean bean = new Bean();
		bean.setTotal(total);
		   
		   bean.setTotalPage(bean.getTotal()/bean.getLimit());
		   
		   if(bean.getTotal()%bean.getLimit()!=0)
		   {
		    bean.setTotalPage(bean.getTotalPage()+1);
		   }
		   
		   bean.setStartPage((bean.getPage()-1)/bean.getPageLimit()*bean.getPageLimit()+1);
		   bean.setEndPage(bean.getStartPage()+bean.getPageLimit()-1);
		   
		   if(bean.getEndPage()>bean.getTotalPage())
		   {
		    bean.setEndPage(bean.getTotalPage());
		   }
		   
		   int start = (bean.getPage()-1)*bean.getLimit()+1;
		   int end = start + bean.getLimit()-1;
		   
		   bean.setStart(start);
		   bean.setEnd(end);
		
		return bean;
	}
	
	public Object data(String service, ServiceRepository repository, Bean bean, HttpServletRequest request,
			Form_Data fd)
	{
		Object res	= bean;
		
		switch(service)
		{
			case "reg_main" :
				int buf2 = (int) repository.getTotal();				
				bean.setTotal(buf2);
				bean.setG_show_hot_total((int)repository.getShowTotal());				
			break;
			
			case "reg" :
				
				bean.setData(repository.reg_findmenu());
				
				System.out.println("reg : "+bean.getG_name());
				System.out.println("reg : "+bean.getBm_id());
				
				
				res = repository.reg_input(bean, fd);
			    
			    	
			break;
		
			case "reg_output" :
				String buffer = request.getParameter("product_number");				
				bean.setTitle(buffer); //inserting the information into the bean				
				repository.inputAdminTest(bean);
				break;
				
				
			case "reg_list" : 
				int total = (int) repository.getTotal();		
				
				bean.setTotal(total);
				   
				   bean.setTotalPage(bean.getTotal()/bean.getLimit());
				   
				   if(bean.getTotal()%bean.getLimit()!=0)
				   {
				    bean.setTotalPage(bean.getTotalPage()+1);
				   }
				   
				   bean.setStartPage((bean.getPage()-1)/bean.getPageLimit()*bean.getPageLimit()+1);
				   bean.setEndPage(bean.getStartPage()+bean.getPageLimit()-1);
				   
				   if(bean.getEndPage()>bean.getTotalPage())
				   {
				    bean.setEndPage(bean.getTotalPage());
				   }
				   
				   int start = (bean.getPage()-1)*bean.getLimit()+1;
				   int end = start + bean.getLimit()-1;
				   
				   bean.setStart(start);
				   bean.setEnd(end);
				
				bean.setData(repository.reglist(bean));
				break;
				
			case "reg_detail":
				bean.setG_code(Integer.parseInt(request.getParameter("idtest")));
				bean.setData(repository.regdetail(bean));				
				bean.setUrl("bs/admin/goods/reg_detail");
				bean.setRedirect(true);
			break;
		
			case "reg_widget1_data":
				int buf3 = (int) repository.getTotal();		
				bean.setData(repository.reglist(PageMaker(buf3)));
				bean.setUrl("bs/admin/goods/reg_widget1_data");
				bean.setRedirect(true);
			break;
			
			case "widget_detail_data":
				bean.setG_code(Integer.parseInt(request.getParameter("idtest")));
				bean.setData(repository.regdetail(bean));
				
				bean.setUrl("bs/admin/goods/widget_detail_data");
				bean.setRedirect(true);
			break;
			
			case "reg_widget2_data" :
				buf3 = (int) repository.getTotal();							
				bean.setData(repository.reglist(PageMaker(buf3)));
				bean.setUrl("bs/admin/goods/reg_widget2_data");
				bean.setRedirect(true);
			break;
			
			case "display_product" : 
				
				int buf = (int) repository.getTotal();	
					bean.setTotal(buf);
				    bean.setStart(0);
				    bean.setEnd(bean.getTotal());
				    					 	
					   String [] buffings = (String[]) bean.getBeanArray();
					   
					   if(bean.getBeanArray()!=null)
					   {
					   
					   if(buffings[0].equals("0"))
					   {
						   System.out.println("going down");
						   repository.showdown(bean);
					   }
					   else
					   {
						   System.out.println("going up");
						   repository.showup(bean);

					   }
					   }
					   

				    bean.setData(repository.reglist(bean));	
				
			break;
		
			case  "reg_menu" :
				Integer bmid = Integer.parseInt(request.getParameter("menu"));
				System.out.println("Admin : "+request.getParameter("menu"));
				
				bean.setBm_id(bmid); 
				bean.setData(repository.reg_findmenu2(bean));
				
				bean.setUrl("bs/admin/goods/reg_menu");
				bean.setRedirect(true);
			break;
			
			case  "reg_menu2" :
				bmid = Integer.parseInt(request.getParameter("menu"));
				System.out.println("Admin : "+request.getParameter("menu"));
				
				bean.setBm_id(bmid); 
				bean.setData(repository.reg_findmenu2(bean));
				
				bean.setUrl("bs/admin/goods/reg_menu2");
				bean.setRedirect(true);
			break;
			
			case "member_list" :
		        System.out.println("member on ");
				
				
			       
			       bean.setTotalPage(bean.getTotal()/bean.getLimit());
			       
			       if(bean.getTotal()%bean.getLimit()!=0)
			       {
			        bean.setTotalPage(bean.getTotalPage()+1);
			       }
			       
			       bean.setStartPage((bean.getPage()-1)/bean.getPageLimit()*bean.getPageLimit()+1);
			       bean.setEndPage(bean.getStartPage()+bean.getPageLimit()-1);
			       
			       if(bean.getEndPage()>bean.getTotalPage())
			       {
			        bean.setEndPage(bean.getTotalPage());
			       }
			       
			        start = (bean.getPage()-1)*bean.getLimit()+1;
			        end = start + bean.getLimit()-1;
			       
			        bean.setStart(start);
			        bean.setEnd(end);
				
				
			        bean.setData(repository.reg_members(bean));
			break;
			
			case "reg_member_detail" : 
				bean.setBs_id(Integer.parseInt(request.getParameter("memberid")));
				bean.setData(repository.getMemberDetail(bean));
				
				bean.setUrl("bs/admin/admin_member/reg_member_detail");
				bean.setRedirect(true);				
			break;		
			
			case "reg_member_specific_detail" :

				String testing = request.getParameter("memberid");
				
				String bufid = testing.substring(testing.lastIndexOf('/')+1);
				String command=testing.substring(0,testing.lastIndexOf('/'));
				
				System.out.println("command : "+command+"///  id : "+bufid);
				
				if(command.equals("bs_participant"))
				{
					System.out.println("participant on");
					bean.setBs_id(Integer.parseInt(bufid));
					bean.setData(repository.getParticipantData(bean));
					bean.setUrl("bs/admin/admin_member/bs_participant_data");	
				}
				
				else if(command.equals("bs_basket"))
				{
					System.out.println("basket on");
					bean.setBs_id(Integer.parseInt(bufid));
					bean.setData(repository.getBasketData(bean));
					bean.setUrl("bs/admin/admin_member/bs_basket_data");	
				}
				
				else if(command.equals("bs_purchase"))
				{
					System.out.println("purchase on");
					bean.setBs_id(Integer.parseInt(bufid));
					bean.setData(repository.getPurchaseData(bean));
					bean.setUrl("bs/admin/admin_member/bs_purchase_data");	
				}
				
				else{
					bean.setUrl("bs/admin/admin_member/reg_member_specific_detail");	
				}
				
				bean.setRedirect(true);
			break;	
			
			case "after_member_list" :
				
				Integer id = Integer.parseInt(request.getParameter("id"));				
				bean.setBs_id(id);
				//repository.reg_member_delete(bean);
			break;
			
			case "member_input_result" : 
				//repository.reg_member_input(bean);			
			break;
			
			case "member_fix" :
				testing = request.getParameter("id");
				bean.setBs_id(Integer.parseInt(testing));
				bean.setData(repository.getMemberDetail(bean));				
				break;
			
			case "member_update_result" :
				 repository.reg_member_update(bean);	
			break;
			
			case "reg_list_delete" :
				System.out.println("delete : "+request.getParameter("id"));
				
				
			break;
			
			case "reg_list_update" :
				System.out.println("update : "+request.getParameter("id"));
			break;
			
				
		}
		return res;
	}

}
